# -*- coding: utf-8 -*-
"""Banking Risk Analysis-EDA case study.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1uDYVl0-pJecWbzZKnxnb1tAzwLdU6KsO
"""

! pip install pandas

#importing Libraries
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np

#importing Libraries
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np

#Read the csv file and show upto 10 rowsS
df = pd.read_csv('Banking.csv')
df.head(10)

df.info()

#Generating Stats for Data frames

df.describe()

df['Estimated Income'].min()

bins = [0,100000,300000, float('inf')]
labels = ['Low', 'Medium', 'High']

df['Income Band'] = pd.cut(df['Estimated Income'], bins=bins, labels=labels, right=False)

df['Income Band'].value_counts().plot(kind= 'bar')

"""Univariate Analysis"""

categorical_cols = ["BRId", "IAId", "Income Band", "GenderId", "Amount of Credit Cards",
                    "Nationality", "Occupation", "Fee Structure", "Loyalty Classification",
                    "Properties Owned", "Risk Weighting"]

# Loop through and display value counts for each
for col in categorical_cols:
    print(f'\nValue Counts for {col}:')
    display(df[col].value_counts(dropna=False))

for i, predictor in enumerate(categorical_cols):
    plt.figure(i, figsize=(8, 4))
    sns.countplot(data=df, x=predictor, hue='GenderId')
    plt.title(f'Distribution of {predictor} by Gender')
    plt.xticks(rotation=45)
    plt.tight_layout()
    plt.show()



for i, predictor in enumerate(categorical_cols):
    plt.figure(i, figsize=(8, 4))
    sns.countplot(data=df, x=predictor, hue='Nationality')
    plt.title(f'Distribution of {predictor} by Gender')
    plt.xticks(rotation=45)
    plt.tight_layout()
    plt.show()

# Loop through categorical columns, excluding 'Occupation'
for col in categorical_cols:
    if col == "Occupation":
        continue  # Skip 'Occupation' column

    plt.figure(figsize=(8, 4))
    sns.histplot(df[col], discrete=True)  # discrete=True is good for categorical vars
    plt.title(f'Histogram of {col} Count')
    plt.xlabel(col)
    plt.ylabel("Count")
    plt.xticks(rotation=45)
    plt.tight_layout()
    plt.show()

"""**Numerical Analysis**"""

numerical_cols = ["Estimated Income", "Superannuation Savings" ]

#Univariate Analysis and Visualizatio
plt.figure(figsize=(8,4))
for i,col in enumerate(numerical_cols):
  plt.subplot(3,1,i+1)
  sns.histplot(df[col],kde=True)
  plt.title(col)
  plt.show()

